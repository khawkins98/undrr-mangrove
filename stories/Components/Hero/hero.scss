@use "../../assets/scss/variables";

// @import '../../../assets/scss/variables';
// @import '../../../assets/scss/breakpoints';
// @import '../../../assets/scss/mixins';

// Hero
// This is a test container we can use for now to ensure the hero "locks" to the grid
// .test-container {
//   max-width: $mg-breakpoint-desktop;
//   background-color: red;
//   height: 100px;
//   margin: 0 auto;
// }
.mg-hero {
  background-size: cover;
  background-position: center;
  color: variables.$mg-color-neutral-0;
  display: grid;
  grid-template-columns: 1fr;
  position: relative;
  margin-left: calc(50% - (50vw)); // to expand out of the parent container
  padding-left: variables.$mg-spacing-100;
  width: 100vw;

  @media (min-width: variables.$mg-breakpoint-tablet) {
    aspect-ratio: 16 / 4; // we use 16:4, which is closer to the real crop ratio
    padding-left: calc(
      50vw - calc(variables.$mg-breakpoint-desktop / 2)
    ); // to keep the overlay fixed
  }

  @media (min-width: variables.$mg-breakpoint-desktop-wide) {
    padding-left: calc(
      50vw - calc(variables.$mg-breakpoint-desktop-wide / 2)
    ); // to keep the overlay fixed
  }

  // Button overrides
  a.mg-button-primary {
    background-color: variables.$mg-color-neutral-0;
  }
  a.mg-button-secondary {
    background-color: rgba(variables.$mg-color-neutral-0, 0.9);
  }
  a.mg-button,
  a.mg-button:hover,
  a.mg-button:visited {
    color: variables.$mg-color-hero;
  }

  &__overlay {
    align-items: center;
    background-color: rgba(variables.$mg-color-hero, variables.$mg-opacity-hero);
    display: grid;
    margin: variables.$mg-spacing-hero-overlay;
    max-width: variables.$mg-width-400;
    padding: variables.$mg-spacing-200;
  }

  &__content {
    display: grid;
    margin-top: variables.$mg-spacing-25;
    row-gap: 1rem;
  }

  &__meta {
    padding-bottom: variables.$mg-spacing-25;

    &.meta-detail {
      display: flex;
      flex-direction: column;
    }
  }

  &__label {
    display: inline-block;
    font-size: variables.$mg-font-label;
    font-weight: bold;
    margin-right: variables.$mg-spacing-25;
    padding: variables.$mg-spacing-25 0;

    &.detail {
      font-weight: normal;
    }
  }

  // Link styles (anchor)
  a,
  a:hover,
  a:visited {
    color: variables.$mg-color-neutral-0;
  }

  // Title styles (for both <h1> and <a>)
  &__title {
    color: variables.$mg-color-neutral-0;
    margin-bottom: variables.$mg-spacing-25;
    display: inline-block;
    line-height: 1;
    font-weight: bold;
    font-size: variables.$mg-font-size-600;

    // General text styles for larger text
    .text-xxl {
      font-size: variables.$mg-font-size-800;

      @media (max-width: variables.$mg-breakpoint-mobile) {
        font-size: variables.$mg-font-size-600;
      }
    }

    .text-xl {
      @include variables.mg-typography("large");

      @media (max-width: variables.$mg-breakpoint-mobile) {
        @include variables.mg-typography("medium");
      }
    }

    // Specific styles for the <h1> element (when there's no link)
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: variables.$mg-color-neutral-0;
      font-weight: bold;
      font-size: variables.$mg-font-size-600;

      // Match the text-xxl and text-xl styling
      &.text-xxl {
        font-size: variables.$mg-font-size-800;

        @media (max-width: variables.$mg-breakpoint-mobile) {
          font-size: variables.$mg-font-size-600;
        }
      }

      &.text-xl {
        @include variables.mg-typography("large");

        @media (max-width: variables.$mg-breakpoint-mobile) {
          @include variables.mg-typography("medium");
        }
      }
    }
  }

  &__summaryText {
    @include variables.mg-typography("small");

    margin-bottom: variables.$mg-spacing-25;
  }
}

.mg-hero__buttons {
  padding-top: variables.$mg-spacing-75;
  display: flex;
  padding-bottom: variables.$mg-spacing-50;
}

// Child variant
.mg-hero--child .mg-hero__overlay {
  @media (max-width: variables.$mg-breakpoint-tablet) {
    margin-left: 0;
  }
}

// Stylistic variants
$variant-colours: (
  "secondary": variables.$mg-color-hero--secondary,
  "tertiary": variables.$mg-color-hero--tertiary,
  "quaternary": variables.$mg-color-hero--quaternary,
);

@each $name, $color in $variant-colours {
  .mg-hero--#{$name} .mg-hero__overlay {
    background-color: rgba($color, variables.$mg-opacity-hero);
    a.mg-button,
    a.mg-button:hover,
    a.mg-button:visited {
      color: #{$color};
    }
  }
}

// RTL tweaks
[dir="rtl"] .mg-hero {
  margin-right: calc(50% - (50vw)); // to expand out of the parent container
  padding-right: variables.$mg-spacing-100;

  @media (min-width: variables.$mg-breakpoint-tablet) {
    padding-right: calc(
      50vw - calc(variables.$mg-breakpoint-desktop / 2)
    ); // to keep the overlay fixed
  }

  @media (min-width: variables.$mg-breakpoint-desktop-wide) {
    padding-right: calc(
      50vw - calc(variables.$mg-breakpoint-desktop-wide / 2)
    ); // to keep the overlay fixed
  }
}
